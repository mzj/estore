<?php

namespace eStore\ShopBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
//use Gedmo\Tree\Entity\Repository\NestedTreeRepository;

use Gedmo\Tree\Entity\Repository\NestedTreeRepository;
        
class CategoryRepository extends NestedTreeRepository
{
    public function categoryMenu() {
        return $this->childrenHierarchy(null, false, array('decorate' => true, 'nodeDecorator' => function($node) {
            return '<a href="categories/' . $node['id'] . '/' . $node['slug'] . '">' . $node['name'] . '</a>';
        }));
    }
    
    public function getAllProducts($category) 
    {
        $categories =  $this->children($category, false);
        $categories[] = $category;
        $products = array();
        
        foreach($categories as $category) {
           $titles[] = $category->getName();
           $productsArr[] = $category->getProducts();
        }
        
        $titles = array();
        foreach($productsArr as $products) {
            foreach($products as $product) {
                $titles[] = $product->getName();
            }
        }
        
        exit(print_r($titles));
       
    }
    
    
    private function flatten(array $array) 
    {
        $return = array();
        array_walk_recursive($array, function($a) use (&$return) { $return[] = $a; });
        return $return;
    }
}